[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "local-llm-chat"
version = "1.0.0"
description = "Local LLM Chat - Universal interface for local language models supporting GGUF"
readme = "README.md"
authors = [
    {name = "Edu DÃ­az", email = "your.email@example.com"}
]
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
keywords = ["llm", "local-llm", "chat", "gguf", "transformers", "llama-cpp", "ai", "chatbot", "offline"]

dependencies = [
    "llama-cpp-python>=0.3.0",
    "huggingface-hub>=0.20.0",
    "torch>=2.0.0",
    "psutil>=5.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/RGiskard7/local-llm-chat"
Repository = "https://github.com/RGiskard7/local-llm-chat"
Documentation = "https://github.com/RGiskard7/local-llm-chat#readme"
Issues = "https://github.com/RGiskard7/local-llm-chat/issues"

[project.scripts]
local-llm-chat = "local_llm_chat.cli:run_cli"
llm-chat = "local_llm_chat.cli:run_cli"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["local_llm_chat*"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --strict-markers"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
